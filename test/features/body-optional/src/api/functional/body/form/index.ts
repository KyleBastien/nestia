/**
 * @packageDocumentation
 * @module api.functional.body.form
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Primitive, Resolved } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { IBodyOptional } from "../../../structures/IBodyOptional";

/**
 * @controller BodyController.formData
 * @path POST /body/form
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function formData(
  connection: IConnection,
  body?: formData.Input,
): Promise<formData.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...formData.METADATA,
      template: formData.METADATA.path,
      path: formData.path(),
    },
    body,
  );
}
export namespace formData {
  export type Input = Resolved<IBodyOptional>;
  export type Output = Primitive<IBodyOptional>;

  export const METADATA = {
    method: "POST",
    path: "/body/form",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/body/form";
}
